{"ast":null,"code":"var _jsxFileName = \"/home/workspace/SimpleDictonaryApp/Task-MERN/dictionary/src/Components/CreateWord/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateWord = props => {\n  _s();\n\n  const [word, setWord] = useState(\"\");\n  const [showErr, setshowErr] = useState(false);\n  const [showLoader, setshowLoader] = useState(false);\n  const [showSuccessMsg, setShowSuccessMsg] = useState(false);\n  const {\n    sendWordData\n  } = props;\n\n  const getDataFunction = async () => {\n    if (word !== \"\") {\n      setshowErr(false);\n      setshowLoader(true);\n      const data = await axios.get(`http://localhost:4000/create/${word}`);\n\n      if (data.status === 200) {\n        sendWordData(data);\n        setshowLoader(false);\n        setshowErr(false);\n        setShowSuccessMsg(true);\n      } else {\n        setshowErr(true);\n      }\n    }\n\n    if (word === \"\") {\n      setshowErr(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addbutton-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"word\",\n      children: \"New Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"word\",\n      className: \"input\",\n      onChange: e => setWord(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), showErr && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter Valid input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), showSuccessMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Word Added Succesfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        \"data-dismiss\": \"modal\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: getDataFunction,\n        children: showLoader ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://icon-library.com/images/spinner-icon-gif/spinner-icon-gif-28.jpg\",\n          alt: \"loading..\",\n          className: \"loading-gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this) : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateWord, \"1N4EzueLkMkEJiODX0dWR8c9sKk=\");\n\n_c = CreateWord;\nexport default CreateWord;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateWord\");","map":{"version":3,"sources":["/home/workspace/SimpleDictonaryApp/Task-MERN/dictionary/src/Components/CreateWord/index.js"],"names":["useState","axios","CreateWord","props","word","setWord","showErr","setshowErr","showLoader","setshowLoader","showSuccessMsg","setShowSuccessMsg","sendWordData","getDataFunction","data","get","status","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAmBT,KAAzB;;AAEA,QAAMU,eAAe,GAAG,YAAY;AAClC,QAAIT,IAAI,KAAK,EAAb,EAAiB;AACfG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA,YAAMK,IAAI,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,gCAA+BX,IAAK,EAA/C,CAAnB;;AACA,UAAIU,IAAI,CAACE,MAAL,KAAgB,GAApB,EAAyB;AACvBJ,QAAAA,YAAY,CAACE,IAAD,CAAZ;AACAL,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,OALD,MAKO;AACLJ,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF;;AACD,QAAIH,IAAI,KAAK,EAAb,EAAiB;AACfG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,MAFL;AAGE,MAAA,SAAS,EAAC,OAHZ;AAIE,MAAA,QAAQ,EAAGU,CAAD,IAAOZ,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,YAFF,EAQGb,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARd,EASGI,cAAc,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATrB,eAUE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,wBAAa,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAEG,eAApC;AAAA,kBACGL,UAAU,gBACT;AACE,UAAA,GAAG,EAAC,0EADN;AAEE,UAAA,GAAG,EAAC,WAFN;AAGE,UAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,gBADS,GAOT;AARJ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAvDD;;GAAMN,U;;KAAAA,U;AAyDN,eAAeA,UAAf","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./index.css\";\nconst CreateWord = (props) => {\n  const [word, setWord] = useState(\"\");\n  const [showErr, setshowErr] = useState(false);\n  const [showLoader, setshowLoader] = useState(false);\n  const [showSuccessMsg, setShowSuccessMsg] = useState(false);\n  const { sendWordData } = props;\n\n  const getDataFunction = async () => {\n    if (word !== \"\") {\n      setshowErr(false);\n      setshowLoader(true);\n      const data = await axios.get(`http://localhost:4000/create/${word}`);\n      if (data.status === 200) {\n        sendWordData(data);\n        setshowLoader(false);\n        setshowErr(false);\n        setShowSuccessMsg(true);\n      } else {\n        setshowErr(true);\n      }\n    }\n    if (word === \"\") {\n      setshowErr(true);\n    }\n  };\n\n  return (\n    <div className=\"addbutton-container\">\n      <label htmlFor=\"word\">New Word</label>\n      <input\n        type=\"text\"\n        id=\"word\"\n        className=\"input\"\n        onChange={(e) => setWord(e.target.value)}\n      />\n      {showErr && <p>Enter Valid input</p>}\n      {showSuccessMsg && <p>Word Added Succesfully</p>}\n      <div className=\"buttons-container\">\n        <button className=\"button\" data-dismiss=\"modal\">\n          Cancel\n        </button>\n        <button className=\"button\" onClick={getDataFunction}>\n          {showLoader ? (\n            <img\n              src=\"https://icon-library.com/images/spinner-icon-gif/spinner-icon-gif-28.jpg\"\n              alt=\"loading..\"\n              className=\"loading-gif\"\n            />\n          ) : (\n            \"Add\"\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateWord;\n"]},"metadata":{},"sourceType":"module"}