{"ast":null,"code":"var _jsxFileName = \"/home/workspace/SimpleDictonaryApp/Task-MERN/dictionary/src/Components/CreateWord/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useHistory } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateWord = props => {\n  _s();\n\n  const [word, setWord] = useState(\"\");\n  const [showErr, setshowErr] = useState(false); //const { getData, errorMsg } = props;\n\n  const history = useHistory();\n\n  const getDataFunction = () => {\n    history.replace(\"/\");\n\n    if (word === \"\") {\n      setshowErr(true);\n    }\n\n    setshowErr(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addbutton-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"word\",\n      children: \"New Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"word\",\n      className: \"input\",\n      onChange: e => setWord(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), showErr && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter Valid input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        \"data-dismiss\": \"modal\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: getDataFunction,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateWord, \"GlTfP4Oe85U0iOAbKHiVZP0vYgQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateWord;\nexport default CreateWord;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateWord\");","map":{"version":3,"sources":["/home/workspace/SimpleDictonaryApp/Task-MERN/dictionary/src/Components/CreateWord/index.js"],"names":["useState","useHistory","CreateWord","props","word","setWord","showErr","setshowErr","history","getDataFunction","replace","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAO,aAAP;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC,CAF4B,CAG5B;;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B;;AAEA,QAAMQ,eAAe,GAAG,MAAM;AAC5BD,IAAAA,OAAO,CAACE,OAAR,CAAgB,GAAhB;;AACA,QAAIN,IAAI,KAAK,EAAb,EAAiB;AACfG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACDA,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,MAFL;AAGE,MAAA,SAAS,EAAC,OAHZ;AAIE,MAAA,QAAQ,EAAGI,CAAD,IAAON,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,YAFF,EAQGP,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARd,eASE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,wBAAa,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAEG,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAlCD;;GAAMP,U;UAIYD,U;;;KAJZC,U;AAoCN,eAAeA,UAAf","sourcesContent":["import { useState, useHistory } from \"react\";\nimport \"./index.css\";\nconst CreateWord = (props) => {\n  const [word, setWord] = useState(\"\");\n  const [showErr, setshowErr] = useState(false);\n  //const { getData, errorMsg } = props;\n  const history = useHistory();\n\n  const getDataFunction = () => {\n    history.replace(\"/\");\n    if (word === \"\") {\n      setshowErr(true);\n    }\n    setshowErr(false);\n  };\n\n  return (\n    <div className=\"addbutton-container\">\n      <label htmlFor=\"word\">New Word</label>\n      <input\n        type=\"text\"\n        id=\"word\"\n        className=\"input\"\n        onChange={(e) => setWord(e.target.value)}\n      />\n      {showErr && <p>Enter Valid input</p>}\n      <div className=\"buttons-container\">\n        <button className=\"button\" data-dismiss=\"modal\">\n          Cancel\n        </button>\n        <button className=\"button\" onClick={getDataFunction}>\n          Add\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateWord;\n"]},"metadata":{},"sourceType":"module"}